//@version=5


// # ========================================================================= #
// #                   |   Indicator  |
// # ========================================================================= #
indicator(
 title                = "TestScript",
 shorttitle           = "Test",
 overlay              =  true,
//  format               =  ,
//  precision            =  ,
//  scale                =  ,
//   timeframe            = "D",
//  timeframe_gaps       =  true
//  explicit_plot_zorder =  ,
 max_lines_count      =  6,
 max_labels_count     =  500
//  max_boxes_count      =  
 )
// # ========================================================================= #
// #                   |   Indicator  |
// # ========================================================================= #

var float[] storedOpenPrice = array.new_float()
var int[] storedBarIndex = array.new_int() 
var bool[] storedIsBull = array.new_bool() 

// var float[] storedOpenPrice = array.new_float(size = 4, initial_value = 0)
// var float[] storedOpenPrice = array.from(arg0 = 1.0, arg1 = 3.0, arg3 = 5.0, arg4 = 7.0) 

//排序
getArray(price, barIndex, isBull) =>
    float[] aFloatPrice = array.new_float()
    // array.push(id = aFloatPrice, value = 3.0)
    // array.push(id = aFloatPrice, value = 1.0) 
    // array.push(id = aFloatPrice, value = 5.0)  
    array.push(id = aFloatPrice, value = price) 

    int[] aIntBarIndex = array.new_int()
    // array.push(id = aIntBarIndex, value = 333)  
    // array.push(id = aIntBarIndex, value = 111) 
    // array.push(id = aIntBarIndex, value = 555)
    array.push(id = aIntBarIndex, value = barIndex)

    bool[] aBoolIsBull = array.new_bool() 
    // array.push(id = aBoolIsBull, value = false) 
    // array.push(id = aBoolIsBull, value = true) 
    // array.push(id = aBoolIsBull, value = true) 
    array.push(id = aBoolIsBull, value = isBull) 

    float temp_float = 0.0
    int temp_barIndex = 0
    bool temp_isBull = false

    for i = 0 to (array.size(aFloatPrice) == 0 ? na : array.size(aFloatPrice) - 1)
        for j = 0 to (array.size(aFloatPrice) == 0 ? na : array.size(aFloatPrice) - 1)
            if array.get(id = aFloatPrice, index = i) < array.get(id = aFloatPrice, index = j)
                temp_float := array.get(id = aFloatPrice, index = i)
                array.set(id = aFloatPrice, index = i, value = array.get(id = aFloatPrice, index = j))  
                array.set(id = aFloatPrice, index = j, value = temp_float) 

                temp_barIndex := array.get(id = aIntBarIndex, index = i)
                array.set(id = aIntBarIndex, index = i, value = array.get(id = aIntBarIndex, index = j)) 
                array.set(id = aIntBarIndex, index = j, value = temp_barIndex) 

                temp_isBull := array.get(id = aBoolIsBull, index = i)
                array.set(id = aBoolIsBull, index = i, value = array.get(id = aBoolIsBull, index = j)) 
                array.set(id = aBoolIsBull, index = j, value = temp_isBull) 

    if array.size(id = aFloatPrice) == 4 
        array.shift(id = aFloatPrice)
        array.shift(id = aIntBarIndex)
        array.shift(id = aBoolIsBull)        

    [aFloatPrice, aIntBarIndex, aBoolIsBull]


getArray(price, priceArray, barIndex, barIndexArray, percent, percentArray) =>
    float[] aFloatPrice = array.copy(id = priceArray) 
    array.push(id = aFloatPrice, value = price) 

    int[] aIntBarIndex = array.copy(id = barIndexArray) 
    array.push(id = aIntBarIndex, value = barIndex)

    float[] aFloatPercent = array.copy(id = percentArray)  
    array.push(id = aFloatPercent, value = percent) 

    float temp_floatPrice = 0.0
    int temp_barIndex = 0
    float temp_floatPercent = 0.0

    for i = 0 to (array.size(aFloatPrice) == 0 ? na : array.size(aFloatPrice) - 1)
        for j = 0 to (array.size(aFloatPrice) == 0 ? na : array.size(aFloatPrice) - 1)
            if array.get(id = aFloatPrice, index = i) < array.get(id = aFloatPrice, index = j)
                temp_floatPrice := array.get(id = aFloatPrice, index = i)
                array.set(id = aFloatPrice, index = i, value = array.get(id = aFloatPrice, index = j))  
                array.set(id = aFloatPrice, index = j, value = temp_floatPrice) 

                temp_barIndex := array.get(id = aIntBarIndex, index = i)
                array.set(id = aIntBarIndex, index = i, value = array.get(id = aIntBarIndex, index = j)) 
                array.set(id = aIntBarIndex, index = j, value = temp_barIndex) 

                temp_floatPercent := array.get(id = aFloatPercent, index = i)
                array.set(id = aFloatPercent, index = i, value = array.get(id = aFloatPercent, index = j)) 
                array.set(id = aFloatPercent, index = j, value = temp_floatPercent) 

    // if array.size(id = aFloatPrice) == 4 
    //     array.shift(id = aFloatPrice)
    //     array.shift(id = aIntBarIndex)
    //     array.shift(id = aFloatPercent)        

    [aFloatPrice, aIntBarIndex, aFloatPercent]

if barstate.islast
    [array1, array2, array3] = getArray(7.0, 777, false)
    storedOpenPrice := array.copy(id = array1)
    storedBarIndex := array.copy(id = array2)
    storedIsBull := array.copy(id = array3)  
    // [storedOpenPrice, storedBarIndex, storedIsBull] = array.copy(id = getArray(7.0, false, 777)) 
    output = str.tostring(value = storedOpenPrice) + "\n"
    output += str.tostring(value = storedBarIndex) + "\n"
    output += str.tostring(value = storedIsBull)  
    label.new(bar_index, high, text = output)


var color DEFALUT = color.white
var color WHITE = color.white
var color BLACK = color.black
getColor(int code) =>
    color output = switch code
        0 => WHITE
        1 => BLACK
        =>
            DEFALUT

    output