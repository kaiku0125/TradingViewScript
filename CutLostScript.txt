//@version=5

// # ========================================================================= #
// #                   |   Indicator  |
// # ========================================================================= #
indicator(
 title                = "Cut lost Position finder",
 shorttitle           = "CLPFinder",
 overlay              =  true
 )
// # ========================================================================= #
// #                   |   Indicator  |
// # ========================================================================= #



// Variable initialization
var float position = 0.0
var float eachOrderLost = 5.0
var float cutLostPrice = na
var line cutLossLine = line.new(bar_index - 1, close, bar_index, close, extend = extend.both, width = 1, color = color.fuchsia)
var color cutLossLineColor = color.purple
var label positionLabel = na


// Define inputs settings
var GROUP_SETTING = "📌 設定"
var GROUN_VERSION = "💬 關於"
var VERSION_NAME = "v1.0"
var RELEASE_NOTE = VERSION_NAME + " Release note :" + "\n" + 
                     "[1] First release." + "\n"


INPUT_EACH_ORDER_LOST = input.float(defval = 5.0, title = "每單止損", minval = 1.0, maxval =  10000.0, step =  1, tooltip = "調整每單止損金額", group = GROUP_SETTING) 
INPUT_CUT_LOST_PRICE = input.price(defval = 0.0, title = "止損價格", confirm = true, group = GROUP_SETTING, inline = "01")
INPUT_CUT_LOST_PRICE_LINE_COLOR = input.color(defval = color.purple, title = "", inline = "01", group = GROUP_SETTING) 
INPUT_DISPLAY_VERSION_NAME = input.string(defval = VERSION_NAME, title = "版本", options = [VERSION_NAME], tooltip = RELEASE_NOTE, group = GROUN_VERSION) 

eachOrderLost := INPUT_EACH_ORDER_LOST
cutLostPrice := INPUT_CUT_LOST_PRICE
cutLossLineColor := INPUT_CUT_LOST_PRICE_LINE_COLOR


// Define functions
getText() =>
    output = "開 " + str.tostring(value = position, format = "#.###") + " " + syminfo.basecurrency + "\n"
    output += "倉位價值 : " + str.tostring(value = position * close, format =  "#")  + " " + syminfo.currency
    output

newLabel(labelText) =>
    output = label.new(
     x            =  bar_index + 2,
     y            =  close,
     text         =  labelText,
    //  xloc         =  ,
    //  yloc         =  ,
     color        =  color.new(color =  color.purple, transp = 0),
     style        =  label.style_label_left,
     textcolor    =  color.new(color =  color.white, transp = 0)
    //  size         =  ,
    //  textalign    =  ,
    //  tooltip      = "" 
     )
    output


// Code logic start
if barstate.islast
    position := eachOrderLost / (1 - ((close - math.abs(close - cutLostPrice)) / close)) / close
    positionLabel = newLabel(getText())
    label.delete(id = positionLabel[1])

    line.set_xy1(cutLossLine, bar_index - 1, cutLostPrice)
    line.set_xy2(cutLossLine, bar_index, cutLostPrice)
    line.set_color(id = cutLossLine, color = cutLossLineColor) 


